@model MyLeasing.Web.Data.Entities.Owner

@{
    ViewData["Title"] = "Details";
}

<h2>Owners</h2>

<div>
    <h4>Edit</h4>

    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.User.Document)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Document)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.User.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.User.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.User.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.User.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.User.PhoneNumber)
        </dt>

    </dl>
</div>
<div>
    <a asp-action="Edit" class="btn btn-warning" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="AddProperty" class="btn btn-primary">Add Property</a>
    <a asp-action="Index" class="btn btn-success">Back to List</a>
</div>

@if (Model.Properties.Count == 0)
{
    <h5> Not Property Added Yet</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Properties.FirstOrDefault().Neighborhood)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Properties.FirstOrDefault().Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Properties.FirstOrDefault().Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Properties.FirstOrDefault().SquareMeters)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Properties.FirstOrDefault().Rooms)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Properties.FirstOrDefault().IsAvailable)
                </th>

                <th>
                    Images
                </th>

                <th>
                    Contracts
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Properties)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Neighborhood)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SquareMeters)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Rooms)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.IsAvailable)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.PropertyImages.Count )
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Contracts.Count)
                </td>

                <td>
                    <a asp-action="EditProperty" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="DetailsProperty" class="btn btn-info" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="DeleteProperty" class="btn btn-danger" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
            }
        </tbody>
    </table>



}

